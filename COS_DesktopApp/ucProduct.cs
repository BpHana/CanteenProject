using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using DevExpress.XtraEditors.Repository;
using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraGrid.Columns;

namespace COS_DesktopApp
{
    public partial class ucProduct : DevExpress.XtraEditors.XtraUserControl
    {
        COS_DesktopApp.CanteenOrderingSystemEntities dbContext;

        private static ucProduct _instance;
        public static ucProduct Instance
        {
            get
            {
                if (_instance == null)
                {
                    _instance = new ucProduct();

                }
                return _instance;
            }
        }

        public ucProduct()
        {
            InitializeComponent();

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            dbContext = new COS_DesktopApp.CanteenOrderingSystemEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.products.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                productsBindingSource1.DataSource = dbContext.products.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
            string filterString = "[deletedAt] Is null";
            gridView1.Columns["deletedAt"].FilterInfo = new ColumnFilterInfo(filterString);
        }
        public static Image resizeImage(Image imgToResize, Size size)
        {
            return (Image)(new Bitmap(imgToResize, size));
        }

        public RepositoryItemTextEdit getImage(string image)
        {
            RepositoryItemTextEdit textEdit = new RepositoryItemTextEdit();
            Image obj = Image.FromFile(@"..\..\..\img\" + image);
            obj = resizeImage(obj, new Size(50, 50));
            textEdit.ContextImageOptions.Image = obj;

            return textEdit;
        }


        private void ucProduct_Load(object sender, EventArgs e)
        {

            //RepositoryItemTextEdit textEdit = new RepositoryItemTextEdit();
            //Image obj = Image.FromFile(@"..\..\..\img\merinoIceCream.png");

            //obj = resizeImage(obj, new Size(50, 50));
            //textEdit.ContextImageOptions.Image = obj;

            //var result = from c in db.products select new { id = c.id, name = c.name, price = c.price, volume = c.volume, ingredient = c.ingredient, type = c.products_type.name, origin = c.origin.name, sugar = c.sugar_level.name, company = c.company.name};


            // gridControl1.DataSource = result.ToList();



        }

        private void gridView1_RowUpdated(object sender, DevExpress.XtraGrid.Views.Base.RowObjectEventArgs e)
        {
            //DialogResult dialogResult = MessageBox.Show("Are you sure to update?", "Update", MessageBoxButtons.YesNo);
            //if (dialogResult == DialogResult.Yes)
            //{
                dbContext.SaveChanges();
            //}
            //else if (dialogResult == DialogResult.No)
            //{
            //    var changed = dbContext.ChangeTracker.Entries().Where(x => x.State != EntityState.Unchanged).ToList();
            //    foreach (var obj in changed)
            //    {
            //        obj.CurrentValues.SetValues(obj.OriginalValues);
            //        obj.State = EntityState.Unchanged;
            //    }

            //}

        }
    }
}
