using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using DevExpress.XtraGrid.Columns;

namespace COS_DesktopApp
{
    public partial class ucAccountRole : DevExpress.XtraEditors.XtraUserControl
    {
        COS_DesktopApp.CanteenOrderingSystemEntities dbContext;
        private static ucAccountRole _instance;

        public static ucAccountRole Instance
        {
            get
            {
                {
                    if (_instance == null)
                    {
                        _instance = new ucAccountRole();

                    }
                    return _instance;
                }
            }
        }

        public ucAccountRole()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            dbContext = new COS_DesktopApp.CanteenOrderingSystemEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.account_role.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                account_roleBindingSource.DataSource = dbContext.account_role.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());

            string filterString = "[deletedAt] Is null";
            gridView2.Columns["deletedAt"].FilterInfo = new ColumnFilterInfo(filterString);

        }

        private void gridView1_RowUpdated(object sender, DevExpress.XtraGrid.Views.Base.RowObjectEventArgs e)
        {
            dbContext.SaveChanges();
        }

        private void gridView1_RowDeleted(object sender, DevExpress.Data.RowDeletedEventArgs e)
        {
            dbContext.SaveChanges();
        }

        private void windowsUIButtonPanel1_Click(object sender, EventArgs e)
        {
            gridView2.AddNewRow();
        }

        private void gridView2_InitNewRow(object sender, DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs e)
        {
            int id = Convert.ToInt32(gridView2.GetRowCellValue(gridView2.DataRowCount - 1, gridView2.Columns[colid.FieldName]));

            gridView2.SetRowCellValue(e.RowHandle, gridView2.Columns[colid.FieldName], id + 1);
        }
    }
}
